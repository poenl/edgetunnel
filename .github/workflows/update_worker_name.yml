name: 更改worker项目名称

permissions:
  contents: write

on:
  push:
    branches:
      - main # 在main分支有新的提交时触发

jobs:
  update_prod_branch:
    name: 更新prod分支的wrangler.toml
    runs-on: ubuntu-latest
    steps:
      - name: 读取main分支内容
        uses: actions/checkout@v3
        with:
          ref: main # 确保checkout的是main分支

      - name: 配置Git用户
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: 切换到prod分支并合并main
        run: |
          git fetch origin prod:prod # 获取prod分支
          git checkout prod # 切换到prod分支
          git merge main --no-ff --allow-unrelated-histories -m "Merge main into prod for sync" || {
            echo "Merge conflict detected. Resolving .github/workflows/update_worker_name.yml conflict..."
            git checkout --theirs .github/workflows/update_worker_name.yml # 保留main分支的工作流文件
            git add .github/workflows/update_worker_name.yml # 添加已解决冲突的文件
            git commit -m "Resolve merge conflict in .github/workflows/update_worker_name.yml" # 提交冲突解决
          }

      - name: 更新 wrangler.toml 名称
        run: |
          echo "--- wrangler.toml before sed ---"
          cat wrangler.toml
          awk '/^name = ".*"$/ { print "name = \"proxy-cf\""; next } { print }' wrangler.toml > temp_wrangler.toml && mv temp_wrangler.toml wrangler.toml
          echo "--- wrangler.toml after sed ---"
          cat wrangler.toml

      - name: 提交更改并推送到prod分支
        run: |
          git add wrangler.toml
          echo "--- Git Status before commit ---"
          git status
          git commit -m "Update worker name to proxy-cf on prod branch" || echo "No changes to commit" # 如果没有更改，则不报错
          echo "--- Git Push Output ---"
          git push origin prod
